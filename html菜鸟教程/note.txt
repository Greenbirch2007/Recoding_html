HTML文档的后缀名
.html
.htm

以上两种后缀名没有区别，都可以使用。
<!DOCTYPE html>声明为HTML5文档
<html> 元素是HTML页面的根元素
<head>元素包含了文档的元(meta)数据，如<meta charset="utf-8">定义网页编码为utf-8
<title> 元素描述了文档的标题
<body> 元素包含了可见的页面内容
<h1> 元素定义了一个大标题
<p>元素定义一个段落

<h>用来定义标题
<p>来定义段落
<a>用来定义Html链接，在href属性中指定链接的地址 
<img>定义图片

图像的名称和尺寸以属性的形式提供

<br>换行

html属性

html元素可以设置属性
属性可以在元素中添加附加信息
属性一般描述于开始标签
属性总是以名称、值对的形式出现，比如name="value"

属性实例  href属性

html属性常用引用属性值

属性值应该始终被包括在引号内
双引号是常见的

<class>为html元素定义给一个或多个类名(classname)(类名从样式文件引入)
id:定义元素的唯一id
style:规定元素的行内样式(inline style)
title:描述了元素的额外信息(作为工具条使用)
<hr> 创建一条水平线
<html> 定义Html文档
<body>定义文档的主体
<h1>-<h6> 定义Html标题
<!--.> 定义注释

<br />定义了拆行的效果
<p> 定义一个段落

文本格式化标签



标签	描述
<b>	定义粗体文件
<em>	定义着重文字 定义着重文字
<i>	定义斜体字 定义斜体字
<small>	定义小号字 定义小号字
<strong>	定义加重语气 定义加重语气
<sub>	定义下标字 定义下标字
<sup>	定义上标字 定义上标字
<ins>	定义插入字 定义插入字
<del>	定义删除字 定义删除字

<code>	定义计算机代码 定义计算机代码
<kbd>	定义键盘码 定义键盘码 

<samp>	定义计算机代码样本 定义计算机代码样本
<var>	定义变量  定义变量
<pre>	定义预格式文本  定义预格式文本



标签	描述
<abbr>	定义缩写 定义缩写
<address>	定义地址 定义地址
 <bdo>	定义文字方向  定义文字方向
<blockquote>	定义长的引用  定义长的引用
<q>	定义短的引用语  定义短的引用语
<cite>	定义引用、引证  定义引用、引证
<dfn>	定义一个定义项目。 定义一个定义项目

默认情况下，链接将以下形式出现在浏览器中

一个未访问的链接显示为脸色字体并带有下划线
访问过的链接显示为紫色并带有下划线
点击链接时，链接显示为红色带有下划线


href属性描述了链接的目标

使用target属性，可以定义被链接的文档在何处显示
html链接-id属性
id属性可用于创建在一个Html文档书签标记
书签是不以任何特殊的方式显示，在html文档中不显示的，所以对于读者来说是隐藏囊的

<a> 定义一个超级链接

<title>定义Html文档的标题

浏览器中包含body元素的内容

浏览器的标题包含title元素的内容

<base> 定义页面中所有链接默认的链接目标地址
<meta> 元素来描述html文档的描述，关键词，作者，字符集


<head>元素包含了所有的头部标签元素。可以插入脚本(js),样式文件(css),及各种meta信息

<title>标签定义了不同的标题
<title>
1.定义了浏览器工具栏的标题
2.当网页添加到收藏夹时，显示在收藏夹中的标题
3.显示在搜索引擎结果页面的标题

<base>标签描述了基本的链接地址和链接目标，该标签作为html文档中所有的链接标签的默认链接

<link>标签定义了文档与外部资源之间的关系
<link> 标签通常用于链接到样式表

<style>标签定义了html文档的样式文件引用地址
在<style>元素中可以直接添加样式来渲染html文档

<meta>标签描述了一些基本的元数据

<meta>标签提供了元数据，元数据也不显示在页面上，但会被浏览器解析
meta元素通常用于指定网页的描述，关键字，文件的最后修改时间，作者，和其他云数据

元数据可以适用于浏览器(如何显示内容或重新加载页面)，搜索引擎(关键字)，或其他web服务
<meta>一般放置于<head>区域

<meta>标签-使用实例

为搜素引擎定义关键字  为网页定义描述内容   定义网页作者

每30秒钟刷新当前页面


<script>标签用于加载脚本文件


标签	描述
<head>	定义了文档的信息  定义了文档的信息
<title>	定义了文档的标题 定义了文档的标题
<base>	定义了页面链接标签的默认链接地址 定义了页面链接标签的默认链接地址
<link>	定义了一个文档和外部资源之间的关系 定义了一个文档和外部资源之间的关系
<meta>	定义了HTML文档中的元数据 定义了html文档中的元数据
<script>	定义了客户端的脚本文件 定义了客户端的脚本文件
<style>	定义了HTML文档的样式文件 定义了html文档的样式文件

html样式 css

背景颜色，字体，字体颜色，字体大小
文本对齐方式
<style> 定义文本样式  <link> 定义资源引用地址


html图像

<img>图像标签   源属性(src)

src就是source。源属性的值是图像的url地址

alt属性用来为图像定义一串预备的可替换的文本

替换为嫩属性的值是用户定义的





css3种添加到html中
1.内联样式  在Html元素中使用"style"属性
2.内部样式表  在html文档头部<head>区域使用<style>元素来包含css
3. 外部引用 使用外部css文件

设置图像的高度和宽度


加载页面时，要注意插入页面图像的路径

<img> 定义图像
<map> 定义图像地图
<area> 定义图像地图中的可点击区域

html表格

表格由<table>标签来定义。每个表格均有若干行(由<tr>标签定义)，每行被分割为
若干单元格(由<td>标签定义)
字母td指表格数据(table data),即数据单元格的内容
数据单元格可以包含文本，图片，列表，段落，表单，水平线，表格等

html表格和边框属性

使用边框属性来显示一个带有边框的表格


html表格表头 

表格的表头使用<th>标签进行定义



标签	描述
<table> 定义表格
<th>	 定义表格的表头
<tr>	 定义表格的行
<td>	 定义表格单元
<caption>	 定义表格标题
<colgroup> 定义表格列的组
<col>	 定义用于表格列的属性
<thead> 定义表格的页眉
<tbody>	 定义表格的主体
<tfoot> 定义表格的页脚

html列表
html支持有序，无序和定义列表

无序列表是一个项目的列表，此列项目使用粗体圆点(典型的小黑圆圈)进行标记
无序列表使用<ul>标签

有序列表

有序列表也是一列项目，列表项目使用数字进行标记。
有序列表始于<ol>标签。每个列表项始于<li>标签
列表项使用数字来标记

自定义列表不仅仅是一列项目，而是项目及其注释的组合
自定义列表以<dl>标签开始，每个自定义列表项以<dt>开始。
每个自定义列表项的定义以<dd>开始

<ol>	定义有序列表
<ul>	定义无序列表
<li>	定义列表项
<dl>	定义列表
<dt>	自定义列表项目
<dd>	定义自定列表项的描述

html区块

<div>和<span>

html可以通过<div>和<span>将元素组合起来


html区块元素

大多数Html元素被定义为块级元素或内联元素
块级元素在浏览器显示时，通常会以新行来开始(和结束)
<h1> <p> <ul> 

<div> 定义了文档的区域，块级(block-level)
<span> 用来组合文档中的行内元素，内联元素(inline)\\


html布局


网页布局对改善网站的外观很重要，
网站布局

大多数网站会把内容安排到多个列中(例如报纸杂志)
大多数网站可以使用<div>或<table>元素来创建多列。
css用于对元素进行定位，或为页面创建背景以及色彩丰富的外观


使用表格

大多数站点可以使用<div>或<table>元素来创建多列。
css用于对元素进行定位，或为页面创建背景以及色彩丰富的外观

由于创建高级的布局很耗时，使用模板是一个快速的选项
<d

html表单和文本域




<form>	定义供用户输入的表单
<input>	 定义输入域
<textarea>	定义文本域(一个多行的输入空间爱你)
<label>	 定义<input>元素的标签，一般为输入标题
<fieldset>	 定义了一组相关的表单元素，并使用外框包含起来
<legend>	 定义了<fieldset>元素的标题
<select>	 定义了下拉选项列表
<optgroup>	 定义选项组
<option>	 定义下拉列表中的选项
<button>	 定义一个点击按钮
<datalist>New	 指定一个预先定义的输入空间选项列表
<keygen>New 
<output>New	


html框架


iframe，该url指向不同的网页


iframe- 设置高度与宽度


height与width属性用来定义iframe标签的高度与宽度

属性默认以像素为单位，但是可以指定其按比例显示，比如80%


iframe-移除边框
frameborder 属性用于定义iframe表示是否显示边框
设置属性值为"0"移除iframe的边框：

使用iframe来显示目标链接页面
iframe可以显示一个目标链接的页面
目标链接的属性必须使用iframe的属性

iframe 定义一个内联的iframe

html颜色

html颜色由红色，绿色，蓝色混合而成

html颜色名  

html颜色值 

颜色由红(R),绿(G),蓝(B)组成，也就是RGB

每个颜色的最低值为0（十六进制为00），最高值255（十六进制为FF）

html脚本

<script>标签用于定义客户端脚本，比如js
<script>元素既可包含脚本语句，也可以通过src属性指向外部脚本文件
js最常用于图片操作，表单验证以及内容动态更新

<script>	定义了客户端脚本
<noscript>	 定义了不支持脚本浏览器输出的文本


html字符实体

html 统一资源定位器(uniform resource locators)

url是一个网页地址

scheme://host.domain:port/path/filename

scheme:定义因特网服务的类型，最常见的类型是http
host:定义域主机(http的默认主机是www)
domain:定义因特网域名，比如 runoob.com
:port 定义主机上的端口号(http的默认端口号是80)
path - 定义服务器上的路径(如果省略，则文档必须位于网站的根目录中)
filename:定义文档，资源的名称

http  超文本传输协议    以http://开头的普通网页，不加密
https 安全超文本传输协议   安全网页，加密所有信息交换
ftp  文件传输协议  用于将文件下载或上传至网站
file                   你计算机上的文件



URL 字符编码

url只能使用 ASCII字符集

html总结

站点服务器
1.硬件支出
2.软件支出
3.人工费

使用因特网服务提供商(ISP)
1.连接速度
2.强大的硬件
3.安全性和可靠性


选择ISP时的注意事项

1.24小时支持
2.每日备份
3.流量
4.带宽或内容限制
5.E-mail 功能
6.数据库访问